{"version":3,"sources":["App.js","index.js"],"names":["YandexMusicApi","oauth_url","client_id","client_secret","generate_token_by_username_and_password","username","password","x_captcha_answer","x_captcha_key","a","url","data","grant_type","console","log","post","then","resp","json","fetch","method","headers","body","JSON","stringify","ok","Error","App","api","handleChange","target","name","value","setState","state","handleSubmit","event","preventDefault","token","alert","catch","error","Container","Form","Group","controlId","Label","column","Control","onChange","this","type","placeholder","Button","variant","block","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"w4BAQMA,E,iDACFC,UAAY,0B,KACZC,UAAY,mC,KACZC,cAAgB,mC,KAEhBC,wC,uCAA0C,WAAOC,EAAUC,EAAUC,EAAkBC,GAA7C,iBAAAC,EAAA,6DAChCC,EADgC,UACvB,EAAKT,UADkB,UAGlCU,EAAO,CACPC,WAAY,WACZV,UAAW,EAAKA,UAChBC,cAAe,EAAKA,cACpBE,SAAUA,EACVC,SAAUA,GAGVC,GAAoBC,IACpBG,EAAI,KAAOA,EAAP,CAAaJ,mBAAkBC,mBAGvCK,QAAQC,IAAIJ,EAAKC,GAfqB,SAiBzB,EAAKI,KAAKL,EAAKC,GACvBK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAE,GAAI,OAAIA,EAAI,gBAnBgB,mF,iEAsB1CH,KAAO,SAACL,EAAKC,GACT,OAAOQ,MAAMT,EAAK,CACdU,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChB,aAAc,mBACd,wBAAyB,qBAE7BC,KAAMC,KAAKC,UAAUb,KACtBK,MAAK,SAAAC,GACJ,IAAKA,EAAKQ,GAAI,MAAMC,MAAM,yBAC1B,OAAOT,OAiDJU,E,2MA1CXC,IAAM,IAAI5B,E,EAEV6B,aAAe,YAA8B,IAAD,IAA3BC,OAASC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC5B,EAAKC,SAAL,KAAkB,EAAKC,MAAvB,eAA+BH,EAAOC,M,EAG1CG,aAAe,SAAAC,GACXA,EAAMC,iBADc,MAGS,EAAKH,MAA3B7B,EAHa,EAGbA,SAAUC,EAHG,EAGHA,SACjB,EAAKsB,IAAIxB,wCAAwCC,EAAUC,GAAUU,MAAK,SAAAsB,GACtEC,MAAMD,MACPE,OAAM,SAAAC,GACLF,MAAM,0BAAD,OAA2BE,Q,wEAKpC,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,GAApB,4KACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcjB,KAAK,WAAWkB,SAAUC,KAAKrB,aAC/BsB,KAAK,QAAQC,YAAY,6KAG3C,kBAACT,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,QAAQ,GAApB,mFACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcjB,KAAK,WAAWkB,SAAUC,KAAKrB,aAC/BsB,KAAK,WAAWC,YAAY,qFAG9C,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUH,KAAK,SAASI,OAAK,EAACC,QAASN,KAAKf,cAA5D,wC,GAnCFsB,aChDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4631540d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport $ from 'jquery';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, Container, Form} from 'react-bootstrap'\n\n/**\n * Reference: https://github.com/MarshalX/yandex-music-api/blob/952145c3b8431385f2fe8273d52d8eb4e49fcceb/yandex_music/client.py#L89\n */\nclass YandexMusicApi {\n    oauth_url = 'https://oauth.yandex.ru';\n    client_id = '23cabbbdc6cd418abb4b39c32c41195d';\n    client_secret = '53bc75238f0c4d08a118e51fe9203300';\n\n    generate_token_by_username_and_password = async (username, password, x_captcha_answer, x_captcha_key) => {\n        const url = `${this.oauth_url}/token`;\n\n        let data = {\n            grant_type: 'password',\n            client_id: this.client_id,\n            client_secret: this.client_secret,\n            username: username,\n            password: password\n        };\n\n        if (x_captcha_answer && x_captcha_key) {\n            data = {...data, x_captcha_answer, x_captcha_key}\n        }\n\n        console.log(url, data);\n\n        return await this.post(url, data)\n            .then(resp => resp.json())\n            .then(json => json['access_token']);\n    };\n\n    post = (url, data) => {\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'User-Agent': 'Yandex-Music-API',\n                'X-Yandex-Music-Client': 'WindowsPhone/3.20'\n            },\n            body: JSON.stringify(data)\n        }).then(resp => {\n            if (!resp.ok) throw Error('Response is not ok :(');\n            return resp;\n        });\n    };\n}\n\nclass App extends Component {\n\n    api = new YandexMusicApi();\n\n    handleChange = ({target: {name, value}}) => {\n        this.setState({...this.state, [name]: value})\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const {username, password} = this.state;\n        this.api.generate_token_by_username_and_password(username, password).then(token => {\n            alert(token);\n        }).catch(error => {\n            alert(`An error has occurred: ${error}`)\n        })\n    };\n\n    render() {\n        return (\n            <Container>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label column={false}>Введите логин, почту или телефон:</Form.Label>\n                        <Form.Control name=\"username\" onChange={this.handleChange}\n                                      type=\"email\" placeholder=\"Введите логин, почту или телефон\"/>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label column={false}>Введите пароль</Form.Label>\n                        <Form.Control name=\"password\" onChange={this.handleChange}\n                                      type=\"password\" placeholder=\"Введите пароль\"/>\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\" block onClick={this.handleSubmit}>\n                        Войти\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}